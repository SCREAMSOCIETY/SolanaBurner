{"version":3,"file":"animations.js","mappings":";;UAAA;UACA;;;;;WCDA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;;;;;;ACNA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,SAAS;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,QAAQ;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA,OAAO;AACP,KAAK;AACL,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,MAAM;AAClB,WAAW,YAAY;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;AACA,sBAAsB,oDAAoD;AAC1E;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,iEAAiE;AACjE;AACA;AACA;AACA;AACA;AACA,MAAM,yEAAyE;AAC/E,MAAM,sEAAsE;AAC5E,MAAM;AACN;AACA;AACA;AACA,MAAM,qEAAqE;AAC3E,MAAM,kEAAkE;AACxE,MAAM;AACN;AACA;AACA;AACA,MAAM,kFAAkF;AACxF,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA,IAAI;AACJ;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,+DAA+D;AAC/F,8FAA8F;AAC9F,8FAA8F,wBAAwB;AACtH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qEAAqE;AACrsources":["webpack://workspace/webpack/bootstrap","webpack://workspace/webpack/runtime/define property getters","webpack://workspace/webpack/runtime/hasOwnProperty shorthand","webpack://workspace/webpack/runtime/make namespace object","webpack://workspace/./static/js/animations.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","/**\n * Animations and UI enhancements for the Burn Token Application\n */\n\n// Create confetti effect when successfully burning tokens/NFTs\nfunction createConfetti() {\n  const confettiContainer = document.createElement('div');\n  confettiContainer.className = 'confetti-container';\n  document.body.appendChild(confettiContainer);\n  \n  const colors = ['#FF5252', '#FFD740', '#00C853', '#448AFF', '#E040FB', '#FF6E40'];\n  \n  for (let i = 0; i < 150; i++) {\n    const confetti = document.createElement('div');\n    confetti.className = 'confetti';\n    confetti.style.backgroundColor = colors[Math.floor(Math.random() * colors.length)];\n    confetti.style.left = Math.random() * 100 + 'vw';\n    confetti.style.animationDuration = (Math.random() * 3 + 2) + 's';\n    confetti.style.animationDelay = Math.random() * 2 + 's';\n    confettiContainer.appendChild(confetti);\n  }\n  \n  // Remove confetti after animation completes\n  setTimeout(() => {\n    confettiContainer.remove();\n  }, 5000);\n}\n\n// Toggle dark mode theme\nfunction toggleDarkMode() {\n  document.body.classList.toggle('dark-mode');\n  const isDarkMode = document.body.classList.contains('dark-mode');\n  localStorage.setItem('darkMode', isDarkMode);\n}\n\n// Apply burn animation to an element\nfunction applyBurnAnimation(element) {\n  if (!element) return;\n  \n  // Create burn overlay\n  const burnOverlay = document.createElement('div');\n  burnOverlay.className = 'burn-overlay';\n  element.appendChild(burnOverlay);\n  \n  // Add burn effect class\n  element.classList.add('burning');\n  \n  // Add ember particles\n  for (let i = 0; i < 25; i++) {\n    const ember = document.createElement('div');\n    ember.className = 'ember';\n    ember.style.left = Math.random() * 100 + '%';\n    ember.style.animationDuration = (Math.random() * 2 + 1) + 's';\n    ember.style.animationDelay = Math.random() + 's';\n    burnOverlay.appendChild(ember);\n  }\n  \n  // Remove the element after animation completes\n  setTimeout(() => {\n    element.classList.add('burned');\n    \n    // Fade out and remove\n    setTimeout(() => {\n      element.style.height = element.offsetHeight + 'px';\n      element.style.opacity = '0';\n      \n      setTimeout(() => {\n        try {\n          element.parentNode.removeChild(element);\n        } catch (e) {\n          console.warn('Element already removed from DOM');\n        }\n      }, 500);\n    }, 1000);\n  }, 2000);\n}\n\n// Show achievement notification\nfunction showAchievement(title, description) {\n  const achievementEl = document.createElement('div');\n  achievementEl.className = 'achievement';\n  achievementEl.innerHTML = `\n    <div class=\"achievement-icon\">üèÜ</div>\n    <div class=\"achievement-content\">\n      <h3>${title}</h3>\n      <p>${description}</p>\n    </div>\n  `;\n  \n  document.body.appendChild(achievementEl);\n  \n  // Animate in\n  setTimeout(() => {\n    achievementEl.classList.add('show');\n  }, 100);\n  \n  // Animate out after 5 seconds\n  setTimeout(() => {\n    achievementEl.classList.remove('show');\n    achievementEl.classList.add('hide');\n    \n    // Remove from DOM after animation\n    setTimeout(() => {\n      achievementEl.remove();\n    }, 1000);\n  }, 5000);\n  \n  // Save achievement\n  const achievements = loadAchievements();\n  achievements.push({ title, description, date: new Date().toISOString() });\n  saveAchievements(achievements);\n}\n\n// Update progress bar\nfunction updateProgress(currentVal, maxVal, level) {\n  const progressBar = document.querySelector('.progress-bar');\n  const levelEl = document.querySelector('.current-level');\n  const levelIcon = document.querySelector('.level-icon');\n  \n  if (!progressBar || !levelEl) return;\n  \n  const progress = Math.min((currentVal / maxVal) * 100, 100);\n  progressBar.style.width = progress + '%';\n  levelEl.textContent = level;\n  \n  // Update the level icon if it exists\n  if (levelIcon) {\n    levelIcon.textContent = level;\n  }\n}\n\n// Save achievements to localStorage\nfunction saveAchievements(achievements) {\n  try {\n    localStorage.setItem('burnAchievements', JSON.stringify(achievements));\n  } catch (e) {\n    console.error('Failed to save achievements:', e);\n  }\n}\n\n// Load achievements from localStorage\nfunction loadAchievements() {\n  try {\n    const saved = localStorage.getItem('burnAchievements');\n    return saved ? JSON.parse(saved) : [];\n  } catch (e) {\n    console.error('Failed to load achievements:', e);\n    return [];\n  }\n}\n\n// Check for achievements based on user actions\nfunction checkAchievements(type, value) {\n  const achievements = loadAchievements();\n  \n  // Track stats\n  let stats = JSON.parse(localStorage.getItem('burnStats') || '{}');\n  stats[type] = (stats[type] || 0) + value;\n  localStorage.setItem('burnStats', JSON.stringify(stats));\n  \n  // Define achievement thresholds\n  const tokenAchievements = [\n    { count: 1, title: 'Token Burner', description: 'Burned your first token' },\n    { count: 5, title: 'Token Incinerator', description: 'Burned 5 tokens' },\n    { count: 10, title: 'Token Destroyer', description: 'Burned 10 tokens' }\n  ];\n  \n  const nftAchievements = [\n    { count: 1, title: 'NFT Burner', description: 'Burned your first NFT' },\n    { count: 3, title: 'NFT Incinerator', description: 'Burned 3 NFTs' },\n    { count: 5, title: 'NFT Destroyer', description: 'Burned 5 NFTs' }\n  ];\n  \n  const cnftAchievements = [\n    { count: 1, title: 'cNFT Pioneer', description: 'Burned your first compressed NFT' },\n    { count: 3, title: 'cNFT Master', description: 'Burned 3 compressed NFTs' }\n  ];\n  \n  // Check for achievements based on type\n  let relevantAchievements;\n  if (type === 'tokens') {\n    relevantAchievements = tokenAchievements;\n  } else if (type === 'nfts') {\n    relevantAchievements = nftAchievements;\n  } else if (type === 'cnfts') {\n    relevantAchievements = cnftAchievements;\n  } else {\n    return;\n  }\n  \n  // Check if we've hit any achievement thresholds\n  for (const achievement of relevantAchievements) {\n    if (stats[type] >= achievement.count) {\n      // Check if we already have this achievement\n      const hasAchievement = achievements.some(a => \n        a.title === achievement.title && a.description === achievement.description\n      );\n      \n      if (!hasAchievement) {\n        showAchievement(achievement.title, achievement.description);\n      }\n    }\n  }\n  \n  // Update progress bar if it exists\n  const totalBurned = (stats.tokens || 0) + (stats.nfts || 0) + (stats.cnfts || 0);\n  const level = Math.floor(totalBurned / 5) + 1;\n  const nextLevel = level * 5;\n  updateProgress(totalBurned % 5, 5, level);\n}\n\n// Initialize UI enhancements\nfunction initUIEnhancements() {\n  // Check for dark mode preference\n  const darkModePreference = localStorage.getItem('darkMode');\n  if (darkModePreference === 'true') {\n    document.body.classList.add('dark-mode');\n  }\n  \n  // Add theme toggle button if it doesn't exist\n  if (!document.querySelector('.theme-toggle')) {\n    const themeToggle = document.createElement('button');\n    themeToggle.className = 'theme-toggle';\n    themeToggle.innerHTML = 'üåì';\n    themeToggle.title = 'Toggle Dark Mode';\n    themeToggle.addEventListener('click', toggleDarkMode);\n    document.body.appendChild(themeToggle);\n  }\n  \n  // Add progress bar if it doesn't exist\n  if (!document.querySelector('.level-indicator')) {\n    const levelEl = document.createElement('div');\n    levelEl.className = 'level-indicator';\n    \n    // Create new improved level indicator with icon\n    levelEl.innerHTML = `\n      <div class=\"level-icon\">${Math.floor((JSON.parse(localStorage.getItem('burnStats') || '{}')).tokens || 0 + \n                                          (JSON.parse(localStorage.getItem('burnStats') || '{}')).nfts || 0 + \n                                          (JSON.parse(localStorage.getItem('burnStats') || '{}')).cnfts || 0) / 5 + 1}</div>\n      <div class=\"level-info\">\n        <div class=\"level-label\">Burn Level <span class=\"current-level\">1</span></div>\n        <div class=\"progress-container\">\n          <div class=\"progress-bar\"></div>\n        </div>\n      </div>\n    `;\n    \n    document.body.appendChild(levelEl);\n    \n    // Initialize level progress\n    const stats = JSON.parse(localStorage.getItem('burnStats') || '{}');\n    const totalBurned = (stats.tokens || 0) + (stats.nfts || 0) + (stats.cnfts || 0);\n    const level = Math.floor(totalBurned / 5) + 1;\n    updateProgress(totalBurned % 5, 5, level);\n  }\n  \n  // Add animation styles\n  addAnimationStyles();\n}\n\n// Add animation styles if they don't exist\nfunction addAnimationStyles() {\n  if (!document.getElementById('burn-animation-styles')) {\n    const styleEl = document.createElement('style');\n    styleEl.id = 'burn-animation-styles';\n    styleEl.textContent = `\n      /* Confetti Animation */\n      .confetti-container {\n        position: fixed;\n        top: 0;\n        left: 0;\n        width: 100vw;\n        height: 100vh;\n        pointer-events: none;\n        z-index: 9999;\n      }\n      \n      .confetti {\n        position: absolute;\n        top: -10px;\n        width: 10px;\n        height: 10px;\n        border-radius: 3px;\n        animation: fall linear forwards;\n      }\n      \n      @keyframes fall {\n        0% {\n          transform: translateY(0) rotate(0deg);\n          opacity: 1;\n        }\n        70% {\n          opacity: 1;\n        }\n        100% {\n          transform: translateY(100vh) rotate(720deg);\n          opacity: 0;\n        }\n      }\n      \n      /* Burn Animation */\n      .burning {\n        position: relative;\n        overflow: hidden;\n      }\n      \n      .burn-overlay {\n        position: absolute;\n        top: 0;\n        left: 0;\n        width: 100%;\n        height: 100%;\n        background: linear-gradient(to bottom, rgba(255, 165, 0, 0.3), rgba(255, 0, 0, 0.5));\n        z-index: 2;\n        animation: burn 2s forwards;\n      }\n      \n      @keyframes burn {\n        0% {\n          opacity: 0;\n        }\n        30% {\n          opacity: 0.8;\n        }\n        100% {\n          opacity: 1;\n          background: rgba(0, 0, 0, 0.9);\n        }\n      }\n      \n      .ember {\n        position: absolute;\n        bottom: 0;\n        width: 3px;\n        height: 3px;\n        background-color: #ff6a00;\n        border-radius: 50%;\n        filter: blur(1px);\n        animation: rise linear forwards;\n      }\n      \n      @keyframes rise {\n        0% {\n          transform: translateY(0) scale(1);\n          opacity: 1;\n          background-color: #ff6a00;\n        }\n        75% {\n          opacity: 0.7;\n          background-color: #ff0000;\n        }\n        100% {\n          transform: translateY(-100px) scale(0);\n          opacity: 0;\n        }\n      }\n      \n      .burned {\n        transition: all 0.5s ease;\n      }\n      \n      /* Theme Toggle */\n      .theme-toggle {\n        position: fixed;\n        top: 20px;\n        right: 20px;\n        width: 40px;\n        height: 40px;\n        border-radius: 50%;\n        background-color: var(--color-secondary, #4b3f72);\n        color: var(--color-text-light, #f1f1f6);\n        border: none;\n        font-size: 20px;\n        cursor: pointer;\n        z-index: 999;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        box-shadow: 0 4px 10px rgba(0,0,0,0.2);\n        transition: all 0.3s ease;\n      }\n      \n      .theme-toggle:hover {\n        transform: translateY(-3px);\n        box-shadow: 0 6px 15px rgba(0,0,0,0.4);\n        background-color: var(--color-accent, #ff6b6b);\n      }\n      \n      body.dark-mode {\n        background-color: var(--color-background, #12121e);\n        color: var(--color-text-light, #f1f1f6);\n      }\n      \n      body.dark-mode .token-card,\n      body.dark-mode .nft-card {\n        background-color: var(--color-card, #2a2a3e);\n        border-color: var(--color-secondary-dark, #362d52);\n      }\n      \n      body.dark-mode .token-card:hover,\n      body.dark-mode .nft-card:hover {\n        border-color: var(--color-secondary-light, #6c5d94);\n        box-shadow: 0 6px 12px rgba(0, 0, 0, 0.3);\n      }\n      \n      body.dark-mode .burn-button {\n        background-color: var(--color-accent-dark, #ff3a3a);\n      }\n      \n      body.dark-mode .asset-section h3 {\n        color: var(--color-secondary-light, #6c5d94);\n      }\n      \n      /* Achievement Notification */\n      .achievement {\n        position: fixed;\n        bottom: 30px;\n        right: -350px;\n        width: 300px;\n        background-color: #333;\n        color: white;\n        border-radius: 8px;\n        padding: 15px;\n        display: flex;\n        align-items: center;\n        box-shadow: 0 4px 15px rgba(0,0,0,0.3);\n        transition: transform 0.5s ease;\n        z-index: 9999;\n      }\n      \n      .achievement.show {\n        transform: translateX(-370px);\n      }\n      \n      .achievement.hide {\n        transform: translateX(100px);\n        opacity: 0;\n      }\n      \n      .achievement-icon {\n        font-size: 24px;\n        margin-right: 15px;\n      }\n      \n      .achievement-content h3 {\n        margin: 0 0 5px 0;\n        font-size: 16px;\n      }\n      \n      .achievement-content p {\n        margin: 0;\n        font-size: 14px;\n        opacity: 0.8;\n      }\n      \n      /* Level Indicator */\n      .level-indicator {\n        position: fixed;\n        top: 20px;\n        left: 20px;\n        background-color: var(--color-secondary, #4b3f72);\n        padding: 10px;\n        border-radius: 10px;\n        color: var(--color-text-light, #f1f1f6);\n        z-index: 100;\n        display: flex;\n        align-items: center;\n        box-shadow: 0 4px 10px rgba(0,0,0,0.3);\n        transition: all 0.3s ease;\n      }\n      \n      .level-indicator:hover {\n        transform: translateY(-3px);\n        box-shadow: 0 6px 15px rgba(0,0,0,0.4);\n      }\n      \n      .level-icon {\n        width: 30px;\n        height: 30px;\n        background-color: var(--color-accent, #ff6b6b);\n        border-radius: 50%;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        margin-right: 10px;\n        font-weight: bold;\n        box-shadow: 0 2px 5px rgba(0,0,0,0.2);\n      }\n      \n      .level-info {\n        display: flex;\n        flex-direction: column;\n        min-width: 100px;\n      }\n      \n      .level-label {\n        font-weight: bold;\n        margin-bottom: 5px;\n      }\n      \n      .progress-container {\n        width: 100%;\n        height: 8px;\n        background-color: var(--color-primary-dark, #0e0e1a);\n        border-radius: 4px;\n        overflow: hidden;\n      }\n      \n      .progress-bar {\n        height: 100%;\n        background: var(--color-accent, #ff6b6b);\n        width: 0%;\n        transition: width 0.5s ease;\n      }\n    `;\n    document.head.appendChild(styleEl);\n  }\n}\n\n// Initialize on DOM ready\nif (typeof document !== 'undefined') {\n  if (document.readyState === 'loading') {\n    document.addEventListener('DOMContentLoaded', initUIEnhancements);\n  } else {\n    initUIEnhancements();\n  }\n}\n\n// Export functions for global use\nif (typeof window !== 'undefined') {\n  window.BurnAnimations = {\n    createConfetti,\n    toggleDarkMode,\n    applyBurnAnimation,\n    showAchievement,\n    updateProgress,\n    checkAchievements,\n    initUIEnhancements\n  };\n}\n\n// Export functions for module use\nexport {\n  createConfetti,\n  toggleDarkMode,\n  applyBurnAnimation,\n  showAchievement,\n  updateProgress,\n  checkAchievements,\n  initUIEnhancements\n};"],"names":[],"sourceRoot":""}